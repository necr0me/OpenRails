<% provide(:title, "Edit station") %>
<div class="center-container">
<%= form_for(@station) do |f| %>
  <%= f.label :name %>
  <%= f.text_field :name %>

  <div id="connected-stations-list">
    <% if @station.connected_stations.count != 0 %>
        Connected with:
        <ul>
          <% @station.connected_stations.each do |st| %>
            <li><%= st.name %></li>
          <% end %>
        </ul>
    <% end %>
  </div>

  <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#edit_station_connections_modal" onclick="showStations()" style="margin-bottom: 10px; margin-top: 10px;">
    Set connected stations
  </button>

 <%= f.submit "Save changes" %>
<% end %>
</div>

<div class="modal fade" id="edit_station_connections_modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onClick="cancelHide()"></button>
      </div>
      <div class="modal-body">
        <label>Search for stations: </label>
        <input type="text" id="station-search-input" onkeyup="inputKeyUp()" placeholder="Search...">
        <div><label>Stations:</label></div>

        <div style="display: grid; grid-auto-flow: column;">
          <ul id="station-ul" class="vertical-menu" style="width: 100%;">
            <% @stations.each do |station|%>
              <li><a class="stations_to_choose" id="station-<%=station.id%>" onclick="stationClick(this.id)"
                     data-chosen="<%= @station.connected_stations.include?(station) ? true : false%>"><%=station.name %></a></li>
            <% end %>
          </ul>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="station_connections_add_submit">Confirm</button>
      </div>
    </div>
  </div>
</div>

<script>
    const connectionsToAdd = [];
    const offsetIndex = "station-".length;

    function inputKeyUp()
    {
        var input, filter, ul, li, a, i, txtValue;
        input = document.getElementById('station-search-input');
        filter = input.value.toUpperCase();
        ul = document.getElementById("station-ul");
        li = ul.getElementsByTagName('li');

        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("a")[0];
            txtValue = a.textContent || a.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }

    function showStations()
    {
        connectionsToAdd.length = 0;
        var stations = document.getElementsByClassName("stations_to_choose");
        for (var i = 0; i<stations.length; i++)
        {
            var station = stations.item(i);
            if (station.dataset.chosen === 'true')
            {
                station.style.backgroundColor = 'cornflowerBlue';
                station.style.color = 'white';
                connectionsToAdd.push(station.id.substring(offsetIndex));
            }
        }
    }

    function stationClick(id)
    {
        const value = id.substring(offsetIndex)
        const station = document.getElementById(id)
        if(station.dataset.chosen === 'true')
        {
            const index = connectionsToAdd.indexOf(value);
            if (index !== -1) {
                connectionsToAdd.splice(index, 1);
            }
            station.style.backgroundColor = "#eee";
            station.style.color = 'black';
            station.dataset.chosen = 'false';
        }
        else
        {
            connectionsToAdd.push(value);
            station.style.backgroundColor = 'cornflowerBlue';
            station.style.color = 'white';
            station.dataset.chosen = 'true';
        }
        console.log(connectionsToAdd)
    }


    $(function (){
        $("#station_connections_add_submit").on("click", function() {
            $.ajax(
                {
                    method: 'PATCH',
                    url: '/stations/' + <%=@station.id %> + '/update_station_connections',
                    data: { "authenticity_token": "<%= form_authenticity_token %>", station: {connected_stations: connectionsToAdd}}
                }
            )
        });
    });
</script>