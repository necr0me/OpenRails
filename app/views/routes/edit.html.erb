<% provide(:title, "Edit route") %>
<%= form_for(@route) do |f| %>
<% end %>
<ul id="ordered-stations-list">
<% @route.stations.each_with_index do |station, index| %>
  <li id='os-<%= station.id %>'>
    <%= index+1 %>. <%= station.name %>
  </li>
<% end %>
</ul>
<button class="btn btn-primary" style="font-size: 15px" data-bs-toggle="modal" data-bs-target="#add_station_modal">Add station</button>
<%= render partial: 'station_pick_modal', locals: { stations: @connected_stations}%>

<script>
    window.onload = function()
    {
        let lastListItem = document.querySelector("#ordered-stations-list").lastElementChild
        lastListItem.innerHTML += '<button id="station_remove_button" '
                                + 'class="btn btn-outline-danger" '
                                + 'value=' + lastListItem.id.substring('os-'.length)+ '>'
                                + 'D</button'
    }

    let newStation = ""
    const offsetIndex = 'station-'.length;

    function inputKeyUp()
    {
        var input, filter, ul, li, a, i, txtValue;
        input = document.getElementById('station-search-input');
        filter = input.value.toUpperCase();
        ul = document.getElementById("station-ul");
        li = ul.getElementsByTagName('li');

        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("a")[0];
            txtValue = a.textContent || a.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }

    function stationClick(id)
    {
        const value = id.substring(offsetIndex)
        const station = document.getElementById(id)
        if (newStation === "")
        {
            paintListItem(station, 'cornflowerBlue', 'white', 'true')
            newStation = value;
        }
        else
        {
            if(station.dataset.chosen === 'true')
            {
                paintListItem(station, '#eee', 'black', 'false')
                newStation = "";
            }
            else
            {
                const prevStation = document.getElementById('station-' + newStation);
                paintListItem(prevStation, '#eee', 'black', 'false')
                paintListItem(station, 'cornflowerBlue', 'white', 'true')
                newStation = value;
            }
        }
        console.log(newStation)
    }

    function paintListItem(item, bgColor, color, choose)
    {
        item.style.backgroundColor = bgColor;
        item.style.color = color;
        item.dataset.chosen = choose;
    }

    $(function (){
        $("#station_add_submit").on("click", function() {
            $.ajax(
                {
                    method: 'PATCH',
                    url: '/routes/' + <%= @route.id %>,
                    data: {"authenticity_token": "<%= form_authenticity_token %>", route: {station_id: newStation, action: "add" }}
                }
            )
        });
        $("#station_remove_button").on("click", function(event){
            to_remove = event.target.value
            $.ajax(
              {
                  method: 'PATCH',
                  url: '/routes/' + <%= @route.id %>,
                  data: {"authenticity_token": "<%= form_authenticity_token %>", route: {station_id: to_remove, action: "remove" }}
              }
            )
        })
    });
</script>